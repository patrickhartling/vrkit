#!python

# vrkit is (C) Copyright 2005-2007
#    by Allen Bierbaum, Aron Bierbuam, Patrick Hartling, and Daniel Shipton
#
# This file is part of vrkit.
#
# vrkit is free software; you can redistribute it and/or modify it under the
# terms of the GNU Lesser General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# vrkit is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
# more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import SConsAddons.Util as sca_util      # Get the utils
import sys, os, re, string, glob
import os.path
pj = os.path.join

Import('*')

viewerEnv = build_env.Copy()

boost_options.apply(viewerEnv)

if boost_options.isAvailable():
   viewerEnv.Prepend(CPPPATH = inst_paths['include'],
                     LIBPATH = inst_paths['lib'])

   # XXX: There has to be a better way to do this Mac-specific stuff.
   if platform == 'darwin':
      viewerEnv.Append(LINKFLAGS = ['-Wl,-bind_at_load'])

   # We use automatic linking against the Boost libraries and vrkit on
   # Windows.
   if platform != 'win32':
      po_lib = boost_options.getFullLibName('program_options', viewerEnv)
      viewerEnv.Prepend(LIBS = ['vrkit' + version_suffix + shared_lib_suffix, po_lib])

   appname = 'vrkit_app'
   vrkit_app_name = appname + runtime_suffix
   vrkit_app_srcs = ['vrkit_app.cpp']
   if platform == 'win32':
      vrkit_app_srcs.append(viewerEnv.RES('vrkit_app.rc'))

   vrkit_app_prog = viewerEnv.Program(vrkit_app_name, vrkit_app_srcs)
   viewerEnv.Install(inst_paths['bin'], vrkit_app_prog)

   # On Windows, we need to ensure that we depend on the vrkit lib.
   if platform == 'win32':
      viewerEnv.Depends(vrkit_app_prog,
                         os.path.join(inst_paths['lib'],
                                      'vrkit%s%s.lib' % (version_suffix, shared_lib_suffix)))

   # Only install *.jdef and *.jconf files on first pass.
   if 0 == variant_pass:
      jdef_files  = []
      jconf_files = []
      for path, dirs, files in sca_util.WalkBuildFromSource('.', viewerEnv):
         jconf_files += [pj(path,f) for f in files if f.endswith('.jconf')]
         jdef_files  += [pj(path,f) for f in files if f.endswith('.jdef')]

      viewerEnv.Install(pj(inst_paths['app_base'], 'Viewer'), jconf_files)
      viewerEnv.Install(inst_paths['definitions'], jdef_files)

   # This only needs to be done when building against VR Juggler 2.1.21 or
   # newer.
   if platform == 'darwin':
      if hasattr(vrj_options, 'flagpoll_parser') and \
         vrj_options.flagpoll_parser is not None:
         parser = vrj_options.flagpoll_parser
         use_cocoa = parser.callFlagPoll('--get-all-use-cocoa')
         if use_cocoa == 'yes':
            viewerEnv['BUNDLE_APP_NAME']   = 'Viewer'
            viewerEnv['BUNDLE_INFO_PLIST'] = 'src/Viewer/Info.plist'
            viewerEnv['BUNDLE_PKG_INFO']   = 'src/Viewer/PkgInfo'
            release_target = viewerEnv.Alias('bundle',
                                             makeBundle(appname, viewerEnv))
            viewerEnv.Depends(release_target, appname)
else:
   print "WARNING: Cannot build vrkit_app without Boost.program_options"
