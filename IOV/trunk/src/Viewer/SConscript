#!python
#
import SConsAddons.Util       # Get the utils
import sys, os, re, string, glob
pj = os.path.join
GetPlatform = SConsAddons.Util.GetPlatform;

Import('*')

appname = 'iov_app'

def makeBundleCmd(target, source, env):
   import shutil
   import commands
   import os.path

   target     = 'Viewer'
   sourceinfo = 'Info.plist'
   targetinfo = "%s.app/Contents/Info.plist" % target

   cmd = '%s.app' % target
   if os.path.isdir(cmd):
      shutil.rmtree('%s.app' % target)

   instroot = '%s.app/Contents' % target
   macdir = '%s/MacOS' % instroot
   resdir = '%s/Resources' % instroot

   path = ''
   for d in instroot.split('/'):
      path = os.path.join(path, d)
      if not os.path.isdir(path):
         os.mkdir(path, 0755)

   os.mkdir(macdir, 0755)
   os.mkdir(resdir, 0755)

   shutil.copy2(str(source[0]), macdir)

   if combo['type'] == 'optimized':
      cmd = 'strip -u -r %s/%s' % (macdir, appname)
      commands.getoutput(cmd)

   os.chmod('%s/%s' % (macdir, appname), 0755)

def makeBundle(target):
   cmd = env.Command('bundle', appname, makeBundleCmd)
   env.Alias(appname, cmd)

viewerEnv = build_env.Copy()

boost_options.apply(viewerEnv)

if boost_options.isAvailable():
   viewerEnv.Prepend(CPPPATH = inst_paths['include'],
                     LIBPATH = inst_paths['lib'],
                     LIBS = 'iov'+shared_lib_suffix)

   # XXX: There has to be a better way to do this Mac-specific stuff.
   if GetPlatform() == 'darwin':
      viewerEnv.Append(LINKFLAGS = ['-Wl,-bind_at_load'])

   po_lib = boost_options.getFullLibName('program_options', viewerEnv)
   viewerEnv.Prepend(LIBS = [po_lib])

   iov_app_name = appname + runtime_suffix
   iov_app_prog = viewerEnv.Program(iov_app_name, ['iov_app.cpp',])
   viewerEnv.Install(pj(inst_paths['app_base'], 'Viewer'), iov_app_prog)

   # Only install *.jdef files on first pass.
   if 0 == variant_pass:
      jdef_files = ['iov_app.jdef',]
      jconf_files = ['viewer-nav.jconf', 'viewer-vp.jconf']

      viewerEnv.Install(pj(inst_paths['app_base'], 'Viewer'), jconf_files)
      viewerEnv.Install(pj(inst_paths['app_base'], 'Viewer'), jdef_files)

   # This only needs to be done when building against VR Juggler 2.1.21 or
   # newer.
   if GetPlatform() == 'darwin':
      if hasattr(vrj_options, 'flagpoll_parser') and \
         vrj_options.flagpoll_parser is not None:
         parser = vrj_options.flagpoll_parser
         use_cocoa = parser.callFlagPoll('--get-all-use-cocoa')
         if use_cocoa == 'yes':
            release_target = viewerEnv.Alias('bundle', makeBundle(appname))
            viewerEnv.Depends(release_target, appname)
else:
   print "WARNING: Cannot build iov_app without Boost.program_options"
