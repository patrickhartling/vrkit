<?xml version="1.0" encoding="UTF-8"?>
<?org-vrjuggler-jccl-settings definition.version="3.1"?>
<definition xmlns="http://www.vrjuggler.org/jccl/xsd/3.1/definition" name="simple_nav_plugin" icon_path="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.vrjuggler.org/jccl/xsd/3.1/definition http://www.vrjuggler.org/jccl/xsd/3.1/definition.xsd">
   <definition_version version="1" label="vrkit Simple Navigation Plug-In">
      <abstract>false</abstract>
      <help />
      <category>/vrkit/</category>
      <property valuetype="integer" variable="false" name="forward_button_num">
         <help />
         <value label="Forward Button Number" defaultvalue="-1" />
      </property>
      <property valuetype="integer" variable="false" name="reverse_button_num">
         <help />
         <value label="Reverse Button Number" defaultvalue="-1" />
      </property>
      <property valuetype="integer" variable="false" name="rotate_button_num">
         <help />
         <value label="Rotate Button Number" defaultvalue="-1" />
      </property>
      <property valuetype="integer" variable="false" name="nav_mode_button_num">
         <help />
         <value label="Mode Toggle Button" defaultvalue="-1" />
      </property>
      <upgrade_transform />
   </definition_version>
   <definition_version version="2" label="vrkit Simple Navigation Plug-In">
      <abstract>false</abstract>
      <help />
      <category>/vrkit/</category>
      <property valuetype="string" variable="false" name="forward_button_nums">
         <help>Describe the button state that causes forward motion. The state can be any combination of buttons and button states configured as a boolean expression. The button indices are zero-based and are based on the configuration of the vrkit wand interface configuration. That is, they are indices into the collection of digital buttons configured for use by the vrkit wand interface. The four button states, and associated (unary) state operator, are as follows: on (+), off (-), toggle on (^), and toggle off (v). The boolean operators, and associated (binary) state operator, are as folows: and (&amp;), inclusive or (|), and exclusive or (^). Expressions can be grouped using paretheses and negated using the unary ! operator. An empty string indicates that this action should be disabled.</help>
         <value label="Forward Button Numbers" defaultvalue="" />
      </property>
      <property valuetype="string" variable="false" name="reverse_button_nums">
         <help>Describe the button state that causes reverse motion. The state can be any combination of buttons and button states configured as a boolean expression. The button indices are zero-based and are based on the configuration of the vrkit wand interface configuration. That is, they are indices into the collection of digital buttons configured for use by the vrkit wand interface. The four button states, and associated (unary) state operator, are as follows: on (+), off (-), toggle on (^), and toggle off (v). The boolean operators, and associated (binary) state operator, are as folows: and (&amp;), inclusive or (|), and exclusive or (^). Expressions can be grouped using paretheses and negated using the unary ! operator. An empty string indicates that this action should be disabled.</help>
         <value label="Reverse Button Numbers" defaultvalue="" />
      </property>
      <property valuetype="string" variable="false" name="rotate_button_nums">
         <help>Describe the button state that causes rotation. The state can be any combination of buttons and button states configured as a boolean expression. The button indices are zero-based and are based on the configuration of the vrkit wand interface configuration. That is, they are indices into the collection of digital buttons configured for use by the vrkit wand interface. The four button states, and associated (unary) state operator, are as follows: on (+), off (-), toggle on (^), and toggle off (v). The boolean operators, and associated (binary) state operator, are as folows: and (&amp;), inclusive or (|), and exclusive or (^). Expressions can be grouped using paretheses and negated using the unary ! operator. An empty string indicates that this action should be disabled.</help>
         <value label="Rotate Button Numbers" defaultvalue="" />
      </property>
      <property valuetype="string" variable="false" name="nav_mode_button_nums">
         <help>Describe the button state that causes toggling the navigation mode between walk and fly. The state can be any combination of buttons and button states configured as a boolean expression. The button indices are zero-based and are based on the configuration of the vrkit wand interface configuration. That is, they are indices into the collection of digital buttons configured for use by the vrkit wand interface. The four button states, and associated (unary) state operator, are as follows: on (+), off (-), toggle on (^), and toggle off (v). The boolean operators, and associated (binary) state operator, are as folows: and (&amp;), inclusive or (|), and exclusive or (^). Expressions can be grouped using paretheses and negated using the unary ! operator. An empty string indicates that this action should be disabled.</help>
         <value label="Mode Toggle Buttons" defaultvalue="" />
      </property>
      <upgrade_transform>
         <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jconf="http://www.vrjuggler.org/jccl/xsd/3.0/configuration" version="1.0">
            <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"/>
            <xsl:variable name="jconf">http://www.vrjuggler.org/jccl/xsd/3.0/configuration</xsl:variable>

            <xsl:template match="/">
                <xsl:apply-templates/>
            </xsl:template>

            <xsl:template match="jconf:simple_nav_plugin">
               <xsl:element namespace="{$jconf}" name="simple_nav_plugin">
                  <xsl:attribute name="name">
                     <xsl:value-of select="@name"/>
                  </xsl:attribute>
                  <xsl:attribute name="version">2</xsl:attribute>
                  <xsl:element namespace="{$jconf}" name="forward_button_nums">
                     <xsl:variable name="num">
                        <xsl:value-of select="./jconf:forward_button_num" />
                     </xsl:variable>
                     <xsl:if test="$num != '-1'">
                        <xsl:value-of select="$num" /><xsl:text>+</xsl:text>
                     </xsl:if>
                  </xsl:element>
                  <xsl:element namespace="{$jconf}" name="reverse_button_nums">
                     <xsl:variable name="num">
                        <xsl:value-of select="./jconf:reverse_button_num" />
                     </xsl:variable>
                     <xsl:if test="$num != '-1'">
                        <xsl:value-of select="$num" /><xsl:text>+</xsl:text>
                     </xsl:if>
                  </xsl:element>
                  <xsl:element namespace="{$jconf}" name="rotate_button_nums">
                     <xsl:variable name="num">
                        <xsl:value-of select="./jconf:rotate_button_num" />
                     </xsl:variable>
                     <xsl:if test="$num != '-1'">
                        <xsl:value-of select="$num" /><xsl:text>+</xsl:text>
                     </xsl:if>
                  </xsl:element>
                  <xsl:element namespace="{$jconf}" name="nav_mode_button_nums">
                     <xsl:variable name="num">
                        <xsl:value-of select="./jconf:nav_mode_button_num" />
                     </xsl:variable>
                     <xsl:if test="$num != '-1'">
                        <xsl:value-of select="$num" /><xsl:text>^</xsl:text>
                     </xsl:if>
                  </xsl:element>
               </xsl:element>
            </xsl:template>
         </xsl:stylesheet>
      </upgrade_transform>
   </definition_version>
</definition>

